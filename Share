Here are the **8 steps**—in the same one-liner/module style—to add your **MTM Contracts Booked per Week (Last 4 Years)** line-chart:

---

### 1. Model

```csharp
public class MtmContractCount
{
    public DateTime Week  { get; set; }
    public int      Count { get; set; }
}
```

### 2. IOracleDataService

```csharp
Task<IEnumerable<MtmContractCount>> GetMtmContractsBookedAsync(DateTime fromDate, DateTime toDate);
```

### 3. OracleDataService

```csharp
public async Task<IEnumerable<MtmContractCount>> GetMtmContractsBookedAsync(DateTime fromDate, DateTime toDate)
{
    var list = new List<MtmContractCount>();
    await using var conn = new OracleConnection(_connectionString);
    await conn.OpenAsync();
    const string sql = @"
SELECT TRUNC(inp_dt,'IW') AS Week, COUNT(1) AS Count
  FROM star_contract PARTITION(product_oth)
 WHERE inp_dt BETWEEN :fromDate AND :toDate
   AND con_no IN (SELECT con_no FROM star_mtm WHERE lgcl_del_flg='N')
   AND mrr_typ_cod IN (0,1,6)
 GROUP BY TRUNC(inp_dt,'IW')
 ORDER BY TRUNC(inp_dt,'IW')";
    await using var cmd = new OracleCommand(sql, conn) { BindByName = true };
    cmd.Parameters.Add("fromDate", OracleDbType.Date).Value = fromDate;
    cmd.Parameters.Add("toDate",   OracleDbType.Date).Value = toDate;
    await using var rdr = await cmd.ExecuteReaderAsync();
    while (await rdr.ReadAsync())
        list.Add(new MtmContractCount {
            Week  = rdr.GetDateTime(rdr.GetOrdinal("Week")),
            Count = rdr.GetInt32 (rdr.GetOrdinal("Count"))
        });
    return list;
}
```

### 4. IChartGeneratorService

```csharp
Task<string> GenerateMtmContractsLineChartAsync(IEnumerable<MtmContractCount> data);
```

### 5. ChartGeneratorService

```csharp
public async Task<string> GenerateMtmContractsLineChartAsync(IEnumerable<MtmContractCount> data)
{
    var ts      = DateTime.UtcNow:ToString("yyyyMMddHHmmss");
    var csvPath = Path.Combine(_csvDir,   $"mtm_contracts_{ts}.csv");
    var pngPath = Path.Combine(_chartDir, $"mtm_contracts_{ts}.png");
    await File.WriteAllTextAsync(csvPath,
        "Week,Count\n" +
        string.Join("\n", data.Select(d => $"{d.Week:yyyy-MM-dd},{d.Count}")));
    var script = Path.Combine(_scriptDir,"generate_mtm_contracts_line_chart.py");
    var psi    = new ProcessStartInfo("python",$"\"{script}\" \"{csvPath}\" \"{pngPath}\"")
    { RedirectStandardError=true, UseShellExecute=false };
    using var proc = Process.Start(psi) 
                  ?? throw new InvalidOperationException("Could not start Python");
    var err = await proc.StandardError.ReadToEndAsync();
    await proc.WaitForExitAsync();
    if (!string.IsNullOrWhiteSpace(err)) _log.LogError(err);
    return $"/charts/{Path.GetFileName(pngPath)}";
}
```

### 6. Python script

```python
# generate_mtm_contracts_line_chart.py
import sys, pandas as pd, matplotlib.pyplot as plt
def main(inp,outp):
    df = pd.read_csv(inp, parse_dates=['Week'])
    fig, ax = plt.subplots(figsize=(10,5))
    if df.empty:
        ax.text(0.5,0.5,'No data to display',ha='center',va='center',fontsize=14)
        ax.axis('off')
    else:
        ax.plot(df['Week'], df['Count'], marker='o')
        ax.set_xlabel('Week'); ax.set_ylabel('MTM Contracts')
        ax.tick_params(axis='x',rotation=45)
        plt.tight_layout()
    plt.savefig(outp)
if __name__=='__main__':
    if len(sys.argv)!=3: sys.exit("Usage: script <in.csv> <out.png>")
    main(sys.argv[1],sys.argv[2])
```

### 7. ChartUpdaterWorker.cs

```csharp
// ----------------------------------------------------------------
// MTM Contracts Booked per Week (Last 4 Years)
// ----------------------------------------------------------------
_log.LogInformation("=== Starting MTM Contracts line-chart update at {Time} ===",DateTime.UtcNow);
var mtmData = await oracle.GetMtmContractsBookedAsync(
    DateTime.UtcNow.AddYears(-4), DateTime.UtcNow);
var mtmUrl  = await generator.GenerateMtmContractsLineChartAsync(mtmData);
metadata["mtm_contracts_4yr"] = new { ImageUrl=mtmUrl, LastUpdated=DateTime.UtcNow };
_log.LogInformation("Updated Chart and Meta data, wrote mtm_contracts_4yr.png -> {Url}",mtmUrl);
```

### 8. Razor page

```razor
<GraphBox GraphID="mtm_contracts_4yr" Title="MTM Contracts Booked per Week (Last 4 Years)" />
```
