@using Microsoft.AspNetCore.Components
@inject HttpClient Http
@inject NavigationManager Nav

<div class="card mb-3">
  <div class="card-header d-flex justify-content-between align-items-center">
    <strong>@Title</strong>
    <button class="btn btn-sm btn-outline-primary" @onclick="RefreshAsync" disabled="@_loading">
      @if (_loading)
      {
        <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
        <span class="visually-hidden">Loading...</span>
      }
      else
      {
        â†»
      }
    </button>
  </div>
  <div class="card-body text-center">
    <img src="@_chartUrl" alt="@Title" class="img-fluid" />
  </div>
</div>

@code {
  [Parameter] public string Title { get; set; } = string.Empty;
  [Parameter] public string Src { get; set; } = string.Empty;
  [Parameter] public string RefreshEndpoint { get; set; } = string.Empty;

  private bool _loading;
  private long _ts = DateTimeOffset.UtcNow.ToUnixTimeSeconds();
  private string _chartUrl => $"{Nav.BaseUri}{Src}?ts={_ts}";

  private async Task RefreshAsync()
  {
    _loading = true;
    StateHasChanged();

    await Http.GetAsync(RefreshEndpoint);
    _ts = DateTimeOffset.UtcNow.ToUnixTimeSeconds();

    _loading = false;
    StateHasChanged();
  }
}







<GraphBox
  Title="OTC Product Types (last 7 days)"
  Src="charts/otc-product-types.png"
  RefreshEndpoint="api/graphs/refresh-otc-chart" />

