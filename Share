using Oracle.ManagedDataAccess.Client;
using YourProject.Models;
using Microsoft.Extensions.Configuration;
using System;
using System.Collections.Generic;
using System.Threading.Tasks;

namespace YourProject.Services
{
    public class OracleDataService : IOracleDataService
    {
        private readonly string _connectionString;

        public OracleDataService(IConfiguration configuration)
        {
            _connectionString = configuration.GetConnectionString("OracleDb") 
                ?? throw new ArgumentNullException("Oracle connection string is not configured.");
        }

        public async Task<List<FeatureUsage>> GetFeatureUsageAsync()
        {
            var featureUsageList = new List<FeatureUsage>();

            try
            {
                using var conn = new OracleConnection(_connectionString);
                await conn.OpenAsync();

                using var cmd = conn.CreateCommand();
                cmd.CommandText = @"
                    SELECT feature, COUNT(*) AS usage_count
                    FROM star_action_audit
                    WHERE mod_dt > TRUNC(SYSDATE) - 30
                      AND feature_type = 'SEARCH'
                    GROUP BY feature
                    ORDER BY usage_count DESC
                ";

                using var reader = await cmd.ExecuteReaderAsync();
                while (await reader.ReadAsync())
                {
                    var feature = reader["feature"]?.ToString() ?? string.Empty;
                    var usageCount = reader["usage_count"] != DBNull.Value 
                        ? Convert.ToInt32(reader["usage_count"]) : 0;

                    featureUsageList.Add(new FeatureUsage 
                    { 
                        Feature = feature, 
                        UsageCount = usageCount 
                    });
                }
            }
            catch (Exception ex)
            {
                // Log the exception if desired
                throw new Exception("Error fetching data from Oracle DB", ex);
            }

            return featureUsageList;
        }
    }
}
