Thought for a second

 _log.LogInformation("=== Starting location_deals update at {Time} ===", DateTime.UtcNow);
_log.LogInformation("=== Update cycle complete. Next run in {Interval} minutes ===", 
                                 _interval.TotalMinutes);
 _log.LogInformation("Wrote location_deals.png → {Url}", locUrl);
_log.LogInformation("Wrote product_trades.png → {Url}", tradeUrl);

Here’s the fully-aliased SQL for your three-axis chart. Just drop this into your C# string and bind `:fromDate` as before:

```sql
WITH selection AS (
  SELECT 
    wrk.mo_loc_cod           AS loc_cod,
    COUNT(con.con_no)        AS total_deals,
    DECODE(
      con.prd_typ_cod,
      'IR1','IR Swap (Fx/Fl)',
      'IR2','IR Swap (IMM)',
      'IR3','IR Swap (Fl/Fl)',
      'CC1','CCY (Fx/Fl)',
      'CC2','CCY (Fl/Fl)',
      'CC3','CCY (Fx/Fx)',
      'FRA','FRA',
      'CAP','Cap',
      'FLR','Floor',
      'CFS','Cap/Floor Straddle',
      'COL','Cap/Floor Collar',
      'OSP','Swaption Payer',
      'OSR','Swaption Receiver',
      'OSS','Swaption Straddle',
      'DFX','Deposit (Fixed)',
      'DFL','Deposit (Float)',
      'CSH','Cashflow',
      'BOC','Bond Option Call',
      'BOP','Bond Option Put',
      'BOS','Bond Option Straddle',
      'BME','Container BME',
      'IL1','Inflation swap (In/Fx)',
      'IL2','Inflation swap (In/Fl)',
      'IL3','Inflation Fixing Lock (In)',
      con.prd_typ_cod
    )                        AS prd_typ_name
  FROM star_contract PARTITION(product_oth) con
  INNER JOIN star_workflow         wrk
    ON con.con_no = wrk.con_no
  WHERE con.inp_dt >= :fromDate
    AND con.ptf_no IN (
      SELECT ptf_no 
      FROM crds.ptf 
      WHERE mkp_cod = 'BNAB'
        AND loc_cod = 'PAR'
    )
    AND con.prd_typ_cod NOT LIKE 'FX_'
  GROUP BY
    wrk.mo_loc_cod,
    con.prd_typ_cod
),
locations AS (
  SELECT DISTINCT loc_cod
  FROM selection
),
otc_prods AS (
  SELECT DISTINCT prd_typ_name
  FROM selection
)
SELECT
  grid.loc_cod      AS loc_cod,
  NVL(sel.total_deals, 0)  AS total_deals,
  grid.prd_typ_name AS prd_typ_name
FROM (
  SELECT
    l.loc_cod      AS loc_cod,
    p.prd_typ_name AS prd_typ_name
  FROM locations l
  CROSS JOIN otc_prods p
) grid
LEFT JOIN selection sel
  ON sel.loc_cod      = grid.loc_cod
 AND sel.prd_typ_name = grid.prd_typ_name
ORDER BY
  grid.loc_cod,
  grid.prd_typ_name;
```

Just use this string for your `OracleCommand.CommandText`, add the parameter:

```csharp
cmd.CommandText = @"<the SQL above>";
cmd.Parameters.Add(new OracleParameter("fromDate", fromDate));
```

That will eliminate the “column ambiguous” error and return exactly the grid of `loc_cod`, `total_deals`, and `prd_typ_name` for your chart.
