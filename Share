    // OTC Manual Workflow Trades per week
    _log.LogInformation("=== Starting OTC Manual Workflow Trades per Week update at {Time} ===", DateTime.UtcNow);
    var otcData = await oracle.GetOtcManualWorkflowTradesPerWeekAsync(DateTime.UtcNow.AddYears(-4),DateTime.UtcNow.AddDays(-1));
    var otcUrl  = await chartGenerator.GenerateOtcManualWorkflowTradesPerWeekChartAsync(otcData);
    metadata["otc_manual_workflow_trades_per_week"] = new { ImageUrl = otcUrl, LastUpdated = DateTime.UtcNow };
    _log.LogInformation("Updated OTC Manual Workflow Trades per Week Chart → {Url}", otcUrl);

    // Contracts sent to back office per month
    _log.LogInformation("=== Starting Contracts Sent to Back Office update at {Time} ===", DateTime.UtcNow);
    var cboData = await oracle.GetContractsSentToBackOfficeAsync(DateTime.UtcNow.AddYears(-4),DateTime.UtcNow.AddDays(-1));
    var cboUrl  = await chartGenerator.GenerateContractsSentToBackOfficeChartAsync(cboData);
    metadata["contracts_backoffice"] = new { ImageUrl = cboUrl, LastUpdated = DateTime.UtcNow };
    _log.LogInformation("Updated Contracts Sent to Back Office Chart → {Url}", cboUrl);







public async Task<IEnumerable<OtcManualWorkflowTradesPerWeekCount>>
        GetOtcManualWorkflowTradesPerWeekAsync(DateTime fromDate, DateTime toDate)
    {
        var list = new List<OtcManualWorkflowTradesPerWeekCount>();
        await using var conn = new OracleConnection(_connectionString);
        await conn.OpenAsync();

        const string sql = @"
WITH otc_workflow_hist AS (
    SELECT *
      FROM star_workflow_hist
     WHERE con_no IN (SELECT con_no FROM star_contract PARTITION(product_oth))
),
manu AS (
    SELECT DISTINCT con_no
      FROM otc_workflow_hist
     WHERE ops_sts_cod = 'NOT'
)
SELECT TRUNC(w.lst_mod_dt,'DAY') AS Week,
       COUNT(1)                  AS ManuDeals
  FROM (
    SELECT h.con_no, h.lst_mod_dt
      FROM otc_workflow_hist h
     WHERE (h.con_no, h.lst_mod_dt) IN (
         SELECT con_no, MIN(lst_mod_dt)
           FROM otc_workflow_hist
          WHERE con_no IN (SELECT con_no FROM manu)
          GROUP BY con_no
     )
  ) w
 WHERE w.lst_mod_dt BETWEEN :fromDate AND :toDate
 GROUP BY TRUNC(w.lst_mod_dt,'DAY')
 ORDER BY Week ASC";

        await using var cmd = new OracleCommand(sql, conn) { BindByName = true };
        cmd.Parameters.Add("fromDate", OracleDbType.Date).Value = fromDate;
        cmd.Parameters.Add("toDate",   OracleDbType.Date).Value = toDate;

        await using var rdr = await cmd.ExecuteReaderAsync();
        while (await rdr.ReadAsync())
        {
            list.Add(new OtcManualWorkflowTradesPerWeekCount
            {
                Week      = rdr.GetDateTime(rdr.GetOrdinal("Week")),
                ManuDeals = rdr.GetInt32 (rdr.GetOrdinal("ManuDeals"))
            });
        }

        return list;
    }
}
