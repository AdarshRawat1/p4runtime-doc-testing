@inject IOracleDataService OracleDataService
@inject IJSRuntime JSRuntime

<h5 class="fw-semibold">OTC Product Types Booked (Last 7 Days)</h5>

<div class="mb-3">
    <button class="btn btn-sm btn-primary me-2" @onclick="() => GenerateGraph(false)">Show Normal</button>
    <button class="btn btn-sm btn-secondary" @onclick="() => GenerateGraph(true)">Show Zoomed</button>
</div>

@if (IsLoading)
{
    <StarLoader />
}
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger">@ErrorMessage</div>
}

<div id="productTradeChart" style="width: 100%; height: @(IsLoading ? "0px" : "400px"); overflow: hidden;"></div>

@code {
    private bool IsLoading = false;
    private string? ErrorMessage;

    private async Task GenerateGraph(bool logScale)
    {
        try
        {
            IsLoading = true;
            ErrorMessage = null;

            var data = await OracleDataService.GetOtcProductTradesAsync();
            var labels = data.Select(d => d.ProductName).ToList();
            var values = data.Select(d => (double)d.TotalTrades).ToList();

            var chartData = new
            {
                labels,
                values,
                title = "OTC Product Types Booked in Last 7 Days",
                xLabel = "Product Type",
                yLabel = "Contracts"
            };

            await JSRuntime.InvokeVoidAsync("renderPlotlyBarChart", "productTradeChart", chartData, logScale);
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            IsLoading = false;
        }
    }
}
