@inject HttpClient Http
@inject NavigationManager Nav

<div class="chart-container">
  @if (_loading)
  {
    <p><em>Updating chart…</em></p>
  }
  <img 
    src="@_chartUrl" 
    alt="OTC Product Types Chart" 
    style="max-width:100%; display:block; margin-bottom:0.5rem;" />

  @if (!string.IsNullOrEmpty(LastUpdated))
  {
    <div class="text-muted" style="font-size:0.9rem">
      Last updated: @LastUpdated
    </div>
  }

  <button class="btn btn-sm btn-outline-primary mt-2" @onclick="RefreshChart">
    ↻ Refresh
  </button>
</div>

@code {
  private string _chartUrl = "";
  private bool   _loading  = false;
  private string? LastUpdated;

  protected override void OnInitialized()
  {
    // Build initial URL (cache-busted once)
    UpdateChartUrl();
  }

  private void UpdateChartUrl()
  {
    // BaseUri ends with '/'
    _chartUrl = $"{Nav.BaseUri}charts/otc-product-types.png?ts={DateTimeOffset.UtcNow.ToUnixTimeSeconds()}";
  }

  private async Task RefreshChart()
  {
    _loading = true;
    StateHasChanged();

    // Trigger backend to regenerate and save the new PNG
    var resp = await Http.GetAsync("api/graphs/refresh-otc-chart");
    if (resp.IsSuccessStatusCode)
    {
      // Record local timestamp
      LastUpdated = DateTime.Now.ToString("g");

      // Hit the image again with new ts to bust cache
      UpdateChartUrl();
    }
    else
    {
      // Optionally handle failure
      LastUpdated = $"Refresh failed ({(int)resp.StatusCode})";
    }

    _loading = false;
    StateHasChanged();
  }
}
