**Designing graph component**

The user is asking for a reusable graph component in Blazor because they'll have multiple graphs. The idea is to create `GraphViewer.razor` in the Shared folder. The component will accept two parameters: `GraphEndpoint` and `Title`. It'll display the graph with `<img>` and optionally add a refresh button by calling a refresh endpoint.

For example, we could use the component like this:

`<GraphViewer GraphEndpoint="charts/otc-product-types.png" Title="OTC Product Types" />`

It might refresh by appending a cachebuster to the image source.


Thought for 6 seconds


Here’s a tiny Razor‐component you can drop into **Shared/GraphBox.razor**, and then call it for *any* chart you put under `wwwroot/charts/`.

---

### Shared/GraphBox.razor

```razor
@using Microsoft.AspNetCore.Components

<div class="card mb-3">
  <div class="card-header">
    @Title
  </div>
  <div class="card-body text-center">
    <img src="@Src" alt="@Title" class="img-fluid" />
  </div>
</div>

@code {
  /// <summary>
  /// The heading shown above the chart.
  /// </summary>
  [Parameter] public string Title { get; set; } = "";

  /// <summary>
  /// Relative path under wwwroot (eg "charts/otc-product-types.png").
  /// </summary>
  [Parameter] public string Src { get; set; } = "";
}
```

> **Styling notes**
> • Uses Bootstrap’s `.card` and `.img-fluid` (Blazor Server template includes Bootstrap by default).
> • You can tweak margins, borders, etc., to suit your design.

---

### How to use it on your Home page

```razor
@page "/"

<h2>StarTrends Dashboard</h2>

<GraphBox
  Title="OTC Product Types (last 7 days)"
  Src="charts/otc-product-types.png" />

<GraphBox
  Title="Another Graph Stub"
  Src="charts/another-graph.png" />

@* ...and so on for graph #3, #4, etc. *@
```

Each `GraphBox` will render its own card + image. When you click your existing
`/api/graphs/refresh-otc-chart` endpoint and then reload the page, the new PNG
will be picked up automatically.

---

#### Recap

1. **Drop** `GraphBox.razor` into your **Shared** folder.
2. **Embed** it wherever (Home, Dashboard, Layout) with `Title` + `Src`.
3. **Populate** `wwwroot/charts/` via your Python render or refresh‐API.

Now you have a clean, reusable “chart box” for all 25 of your graphs.
