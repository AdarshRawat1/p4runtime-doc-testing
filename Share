@using BlazorBootstrap
@using Star.Services
@using Star.Models

@if (IsLoading)
{
    <PlaceholderContainer Animation="PlaceholderAnimation.Glow">
        <Placeholder Width="PlaceholderWidth.Col12" />
        <Placeholder Width="PlaceholderWidth.Col12" />
    </PlaceholderContainer>
}
else if (!string.IsNullOrEmpty(ErrorMessage))
{
    <Alert Color="AlertColor.Danger">@ErrorMessage</Alert>
}
else
{
    <Chart Data="@chartData" ChartType="ChartType.Bar" />
}

@code {
    private bool IsLoading = true;
    private string? ErrorMessage;
    private ChartData chartData = new();

    [Inject] public IOracleDataService DataService { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var trades = await DataService.GetOtcProductTradeAsync();

            var labels = trades.Select(t => t.ProductName).ToList();
            var values = trades.Select(t => (double)t.TotalTrades).ToList();

            var dataset = new BlazorBootstrap.ChartDataset
            {
                Label = "Trades (Last 7 Days)",
                Data = values,
                BackgroundColor = "rgba(54, 162, 235, 0.6)",
                BorderColor = "rgba(54, 162, 235, 1.0)"
            };

            chartData.Labels = labels;
            chartData.Datasets = new List<BlazorBootstrap.ChartDataset> { dataset };
        }
        catch (Exception ex)
        {
            ErrorMessage = ex.Message;
        }
        finally
        {
            IsLoading = false;
        }
    }
}
